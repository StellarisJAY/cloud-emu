// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: emulator.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmulatorDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmulatorId            int64  `protobuf:"varint,1,opt,name=emulatorId,proto3" json:"emulatorId,omitempty"`
	EmulatorName          string `protobuf:"bytes,2,opt,name=emulatorName,proto3" json:"emulatorName,omitempty"`
	Description           string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Provider              string `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
	SupportSave           bool   `protobuf:"varint,5,opt,name=supportSave,proto3" json:"supportSave,omitempty"`
	SupportGraphicSetting bool   `protobuf:"varint,6,opt,name=supportGraphicSetting,proto3" json:"supportGraphicSetting,omitempty"`
	EmulatorType          string `protobuf:"bytes,7,opt,name=emulatorType,proto3" json:"emulatorType,omitempty"`
	EmulatorCode          string `protobuf:"bytes,8,opt,name=emulatorCode,proto3" json:"emulatorCode,omitempty"`
}

func (x *EmulatorDto) Reset() {
	*x = EmulatorDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emulator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmulatorDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmulatorDto) ProtoMessage() {}

func (x *EmulatorDto) ProtoReflect() protoreflect.Message {
	mi := &file_emulator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmulatorDto.ProtoReflect.Descriptor instead.
func (*EmulatorDto) Descriptor() ([]byte, []int) {
	return file_emulator_proto_rawDescGZIP(), []int{0}
}

func (x *EmulatorDto) GetEmulatorId() int64 {
	if x != nil {
		return x.EmulatorId
	}
	return 0
}

func (x *EmulatorDto) GetEmulatorName() string {
	if x != nil {
		return x.EmulatorName
	}
	return ""
}

func (x *EmulatorDto) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EmulatorDto) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *EmulatorDto) GetSupportSave() bool {
	if x != nil {
		return x.SupportSave
	}
	return false
}

func (x *EmulatorDto) GetSupportGraphicSetting() bool {
	if x != nil {
		return x.SupportGraphicSetting
	}
	return false
}

func (x *EmulatorDto) GetEmulatorType() string {
	if x != nil {
		return x.EmulatorType
	}
	return ""
}

func (x *EmulatorDto) GetEmulatorCode() string {
	if x != nil {
		return x.EmulatorCode
	}
	return ""
}

type GameDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId       int64  `protobuf:"varint,1,opt,name=gameId,proto3" json:"gameId,omitempty"`
	EmulatorId   int64  `protobuf:"varint,2,opt,name=emulatorId,proto3" json:"emulatorId,omitempty"`
	GameName     string `protobuf:"bytes,3,opt,name=gameName,proto3" json:"gameName,omitempty"`
	Size         int32  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	AddTime      string `protobuf:"bytes,5,opt,name=addTime,proto3" json:"addTime,omitempty"`
	CustomData   string `protobuf:"bytes,6,opt,name=customData,proto3" json:"customData,omitempty"`
	EmulatorName string `protobuf:"bytes,7,opt,name=emulatorName,proto3" json:"emulatorName,omitempty"`
	EmulatorType string `protobuf:"bytes,8,opt,name=emulatorType,proto3" json:"emulatorType,omitempty"`
}

func (x *GameDto) Reset() {
	*x = GameDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emulator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameDto) ProtoMessage() {}

func (x *GameDto) ProtoReflect() protoreflect.Message {
	mi := &file_emulator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameDto.ProtoReflect.Descriptor instead.
func (*GameDto) Descriptor() ([]byte, []int) {
	return file_emulator_proto_rawDescGZIP(), []int{1}
}

func (x *GameDto) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *GameDto) GetEmulatorId() int64 {
	if x != nil {
		return x.EmulatorId
	}
	return 0
}

func (x *GameDto) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *GameDto) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GameDto) GetAddTime() string {
	if x != nil {
		return x.AddTime
	}
	return ""
}

func (x *GameDto) GetCustomData() string {
	if x != nil {
		return x.CustomData
	}
	return ""
}

func (x *GameDto) GetEmulatorName() string {
	if x != nil {
		return x.EmulatorName
	}
	return ""
}

func (x *GameDto) GetEmulatorType() string {
	if x != nil {
		return x.EmulatorType
	}
	return ""
}

type ListEmulatorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmulatorName          string `protobuf:"bytes,1,opt,name=emulatorName,proto3" json:"emulatorName,omitempty"`
	Provider              string `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
	SupportSave           bool   `protobuf:"varint,3,opt,name=supportSave,proto3" json:"supportSave,omitempty"`
	SupportGraphicSetting bool   `protobuf:"varint,4,opt,name=supportGraphicSetting,proto3" json:"supportGraphicSetting,omitempty"`
}

func (x *ListEmulatorRequest) Reset() {
	*x = ListEmulatorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emulator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEmulatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEmulatorRequest) ProtoMessage() {}

func (x *ListEmulatorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_emulator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEmulatorRequest.ProtoReflect.Descriptor instead.
func (*ListEmulatorRequest) Descriptor() ([]byte, []int) {
	return file_emulator_proto_rawDescGZIP(), []int{2}
}

func (x *ListEmulatorRequest) GetEmulatorName() string {
	if x != nil {
		return x.EmulatorName
	}
	return ""
}

func (x *ListEmulatorRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *ListEmulatorRequest) GetSupportSave() bool {
	if x != nil {
		return x.SupportSave
	}
	return false
}

func (x *ListEmulatorRequest) GetSupportGraphicSetting() bool {
	if x != nil {
		return x.SupportGraphicSetting
	}
	return false
}

type ListEmulatorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*EmulatorDto `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListEmulatorResponse) Reset() {
	*x = ListEmulatorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emulator_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEmulatorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEmulatorResponse) ProtoMessage() {}

func (x *ListEmulatorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_emulator_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEmulatorResponse.ProtoReflect.Descriptor instead.
func (*ListEmulatorResponse) Descriptor() ([]byte, []int) {
	return file_emulator_proto_rawDescGZIP(), []int{3}
}

func (x *ListEmulatorResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListEmulatorResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListEmulatorResponse) GetData() []*EmulatorDto {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmulatorType string `protobuf:"bytes,1,opt,name=emulatorType,proto3" json:"emulatorType,omitempty"`
	GameName     string `protobuf:"bytes,2,opt,name=gameName,proto3" json:"gameName,omitempty"`
	Page         int32  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize     int32  `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *ListGameRequest) Reset() {
	*x = ListGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emulator_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGameRequest) ProtoMessage() {}

func (x *ListGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_emulator_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGameRequest.ProtoReflect.Descriptor instead.
func (*ListGameRequest) Descriptor() ([]byte, []int) {
	return file_emulator_proto_rawDescGZIP(), []int{4}
}

func (x *ListGameRequest) GetEmulatorType() string {
	if x != nil {
		return x.EmulatorType
	}
	return ""
}

func (x *ListGameRequest) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *ListGameRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListGameRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListGameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*GameDto `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Total   int32      `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListGameResponse) Reset() {
	*x = ListGameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emulator_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGameResponse) ProtoMessage() {}

func (x *ListGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_emulator_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGameResponse.ProtoReflect.Descriptor instead.
func (*ListGameResponse) Descriptor() ([]byte, []int) {
	return file_emulator_proto_rawDescGZIP(), []int{5}
}

func (x *ListGameResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListGameResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListGameResponse) GetData() []*GameDto {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListGameResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListEmulatorTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListEmulatorTypeRequest) Reset() {
	*x = ListEmulatorTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emulator_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEmulatorTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEmulatorTypeRequest) ProtoMessage() {}

func (x *ListEmulatorTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_emulator_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEmulatorTypeRequest.ProtoReflect.Descriptor instead.
func (*ListEmulatorTypeRequest) Descriptor() ([]byte, []int) {
	return file_emulator_proto_rawDescGZIP(), []int{6}
}

type ListEmulatorTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []string `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListEmulatorTypeResponse) Reset() {
	*x = ListEmulatorTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emulator_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEmulatorTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEmulatorTypeResponse) ProtoMessage() {}

func (x *ListEmulatorTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_emulator_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEmulatorTypeResponse.ProtoReflect.Descriptor instead.
func (*ListEmulatorTypeResponse) Descriptor() ([]byte, []int) {
	return file_emulator_proto_rawDescGZIP(), []int{7}
}

func (x *ListEmulatorTypeResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListEmulatorTypeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListEmulatorTypeResponse) GetData() []string {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateEmulatorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmulatorId            int64  `protobuf:"varint,1,opt,name=emulatorId,proto3" json:"emulatorId,omitempty"`
	EmulatorName          string `protobuf:"bytes,2,opt,name=emulatorName,proto3" json:"emulatorName,omitempty"`
	Description           string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Provider              string `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
	SupportSave           bool   `protobuf:"varint,5,opt,name=supportSave,proto3" json:"supportSave,omitempty"`
	SupportGraphicSetting bool   `protobuf:"varint,6,opt,name=supportGraphicSetting,proto3" json:"supportGraphicSetting,omitempty"`
}

func (x *UpdateEmulatorRequest) Reset() {
	*x = UpdateEmulatorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emulator_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEmulatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEmulatorRequest) ProtoMessage() {}

func (x *UpdateEmulatorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_emulator_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEmulatorRequest.ProtoReflect.Descriptor instead.
func (*UpdateEmulatorRequest) Descriptor() ([]byte, []int) {
	return file_emulator_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateEmulatorRequest) GetEmulatorId() int64 {
	if x != nil {
		return x.EmulatorId
	}
	return 0
}

func (x *UpdateEmulatorRequest) GetEmulatorName() string {
	if x != nil {
		return x.EmulatorName
	}
	return ""
}

func (x *UpdateEmulatorRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateEmulatorRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *UpdateEmulatorRequest) GetSupportSave() bool {
	if x != nil {
		return x.SupportSave
	}
	return false
}

func (x *UpdateEmulatorRequest) GetSupportGraphicSetting() bool {
	if x != nil {
		return x.SupportGraphicSetting
	}
	return false
}

type UpdateEmulatorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateEmulatorResponse) Reset() {
	*x = UpdateEmulatorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emulator_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEmulatorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEmulatorResponse) ProtoMessage() {}

func (x *UpdateEmulatorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_emulator_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEmulatorResponse.ProtoReflect.Descriptor instead.
func (*UpdateEmulatorResponse) Descriptor() ([]byte, []int) {
	return file_emulator_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateEmulatorResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateEmulatorResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_emulator_proto protoreflect.FileDescriptor

var file_emulator_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x02, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xaf, 0x02, 0x0a, 0x0b, 0x45, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x44,
	0x74, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74,
	0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x53,
	0x61, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x53, 0x61, 0x76, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x69, 0x63, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x0c,
	0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0xf3, 0x01, 0x0a, 0x07, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x74, 0x6f,
	0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6d, 0x75, 0x6c,
	0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74,
	0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74,
	0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0xad, 0x01, 0x0a, 0x13, 0x4c,
	0x69, 0x73, 0x74, 0x45, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74,
	0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x61, 0x76,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x53, 0x61, 0x76, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x15, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x72, 0x61, 0x70,
	0x68, 0x69, 0x63, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x69, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x45, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x74, 0x6f, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x81, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x67, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x67, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x77, 0x0a, 0x10, 0x4c, 0x69, 0x73,
	0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x44, 0x74, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0x19, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6d, 0x75, 0x6c, 0x61, 0x74,
	0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5c, 0x0a,
	0x18, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xf1, 0x01, 0x0a, 0x15,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x6d, 0x75, 0x6c, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x53, 0x61, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x61, 0x76, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x73, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x22,
	0x46, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x88, 0x03, 0x0a, 0x08, 0x45, 0x6d, 0x75, 0x6c,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x5b, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6d, 0x75, 0x6c,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x17, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12,
	0x10, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x4b, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x13, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e,
	0x12, 0x0c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x12, 0x6c,
	0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6d, 0x75, 0x6c,
	0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x64, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x19,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x75, 0x6c, 0x61, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a,
	0x1a, 0x10, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74,
	0x6f, 0x72, 0x42, 0x14, 0x5a, 0x12, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_emulator_proto_rawDescOnce sync.Once
	file_emulator_proto_rawDescData = file_emulator_proto_rawDesc
)

func file_emulator_proto_rawDescGZIP() []byte {
	file_emulator_proto_rawDescOnce.Do(func() {
		file_emulator_proto_rawDescData = protoimpl.X.CompressGZIP(file_emulator_proto_rawDescData)
	})
	return file_emulator_proto_rawDescData
}

var file_emulator_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_emulator_proto_goTypes = []any{
	(*EmulatorDto)(nil),              // 0: v1.EmulatorDto
	(*GameDto)(nil),                  // 1: v1.GameDto
	(*ListEmulatorRequest)(nil),      // 2: v1.ListEmulatorRequest
	(*ListEmulatorResponse)(nil),     // 3: v1.ListEmulatorResponse
	(*ListGameRequest)(nil),          // 4: v1.ListGameRequest
	(*ListGameResponse)(nil),         // 5: v1.ListGameResponse
	(*ListEmulatorTypeRequest)(nil),  // 6: v1.ListEmulatorTypeRequest
	(*ListEmulatorTypeResponse)(nil), // 7: v1.ListEmulatorTypeResponse
	(*UpdateEmulatorRequest)(nil),    // 8: v1.UpdateEmulatorRequest
	(*UpdateEmulatorResponse)(nil),   // 9: v1.UpdateEmulatorResponse
}
var file_emulator_proto_depIdxs = []int32{
	0, // 0: v1.ListEmulatorResponse.data:type_name -> v1.EmulatorDto
	1, // 1: v1.ListGameResponse.data:type_name -> v1.GameDto
	2, // 2: v1.Emulator.ListEmulator:input_type -> v1.ListEmulatorRequest
	4, // 3: v1.Emulator.ListGame:input_type -> v1.ListGameRequest
	6, // 4: v1.Emulator.ListEmulatorType:input_type -> v1.ListEmulatorTypeRequest
	8, // 5: v1.Emulator.UpdateEmulator:input_type -> v1.UpdateEmulatorRequest
	3, // 6: v1.Emulator.ListEmulator:output_type -> v1.ListEmulatorResponse
	5, // 7: v1.Emulator.ListGame:output_type -> v1.ListGameResponse
	7, // 8: v1.Emulator.ListEmulatorType:output_type -> v1.ListEmulatorTypeResponse
	9, // 9: v1.Emulator.UpdateEmulator:output_type -> v1.UpdateEmulatorResponse
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_emulator_proto_init() }
func file_emulator_proto_init() {
	if File_emulator_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_emulator_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*EmulatorDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emulator_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GameDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emulator_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ListEmulatorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emulator_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ListEmulatorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emulator_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ListGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emulator_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ListGameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emulator_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ListEmulatorTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emulator_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ListEmulatorTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emulator_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateEmulatorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emulator_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateEmulatorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_emulator_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_emulator_proto_goTypes,
		DependencyIndexes: file_emulator_proto_depIdxs,
		MessageInfos:      file_emulator_proto_msgTypes,
	}.Build()
	File_emulator_proto = out.File
	file_emulator_proto_rawDesc = nil
	file_emulator_proto_goTypes = nil
	file_emulator_proto_depIdxs = nil
}
