// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: game.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetGameInstanceResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token      string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	SessionKey string `protobuf:"bytes,2,opt,name=sessionKey,proto3" json:"sessionKey,omitempty"`
}

func (x *GetGameInstanceResult) Reset() {
	*x = GetGameInstanceResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameInstanceResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameInstanceResult) ProtoMessage() {}

func (x *GetGameInstanceResult) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameInstanceResult.ProtoReflect.Descriptor instead.
func (*GetGameInstanceResult) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{0}
}

func (x *GetGameInstanceResult) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetGameInstanceResult) GetSessionKey() string {
	if x != nil {
		return x.SessionKey
	}
	return ""
}

type RoomMemberAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Ip     string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	AppId  string `protobuf:"bytes,3,opt,name=appId,proto3" json:"appId,omitempty"`
}

func (x *RoomMemberAuth) Reset() {
	*x = RoomMemberAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomMemberAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomMemberAuth) ProtoMessage() {}

func (x *RoomMemberAuth) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomMemberAuth.ProtoReflect.Descriptor instead.
func (*RoomMemberAuth) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{1}
}

func (x *RoomMemberAuth) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RoomMemberAuth) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *RoomMemberAuth) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

type OpenGameInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId       int64           `protobuf:"varint,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	Auth         *RoomMemberAuth `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	EmulatorId   int64           `protobuf:"varint,3,opt,name=emulatorId,proto3" json:"emulatorId,omitempty"`
	GameId       int64           `protobuf:"varint,4,opt,name=gameId,proto3" json:"gameId,omitempty"`
	EmulatorCode string          `protobuf:"bytes,5,opt,name=emulatorCode,proto3" json:"emulatorCode,omitempty"`
	GameData     []byte          `protobuf:"bytes,6,opt,name=gameData,proto3" json:"gameData,omitempty"`
}

func (x *OpenGameInstanceRequest) Reset() {
	*x = OpenGameInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenGameInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenGameInstanceRequest) ProtoMessage() {}

func (x *OpenGameInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenGameInstanceRequest.ProtoReflect.Descriptor instead.
func (*OpenGameInstanceRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{2}
}

func (x *OpenGameInstanceRequest) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *OpenGameInstanceRequest) GetAuth() *RoomMemberAuth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *OpenGameInstanceRequest) GetEmulatorId() int64 {
	if x != nil {
		return x.EmulatorId
	}
	return 0
}

func (x *OpenGameInstanceRequest) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *OpenGameInstanceRequest) GetEmulatorCode() string {
	if x != nil {
		return x.EmulatorCode
	}
	return ""
}

func (x *OpenGameInstanceRequest) GetGameData() []byte {
	if x != nil {
		return x.GameData
	}
	return nil
}

type OpenGameInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *GetGameInstanceResult `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *OpenGameInstanceResponse) Reset() {
	*x = OpenGameInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenGameInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenGameInstanceResponse) ProtoMessage() {}

func (x *OpenGameInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenGameInstanceResponse.ProtoReflect.Descriptor instead.
func (*OpenGameInstanceResponse) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{3}
}

func (x *OpenGameInstanceResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OpenGameInstanceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *OpenGameInstanceResponse) GetData() *GetGameInstanceResult {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetRoomInstanceAccessTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId int64           `protobuf:"varint,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	Auth   *RoomMemberAuth `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *GetRoomInstanceAccessTokenRequest) Reset() {
	*x = GetRoomInstanceAccessTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomInstanceAccessTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomInstanceAccessTokenRequest) ProtoMessage() {}

func (x *GetRoomInstanceAccessTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomInstanceAccessTokenRequest.ProtoReflect.Descriptor instead.
func (*GetRoomInstanceAccessTokenRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{4}
}

func (x *GetRoomInstanceAccessTokenRequest) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *GetRoomInstanceAccessTokenRequest) GetAuth() *RoomMemberAuth {
	if x != nil {
		return x.Auth
	}
	return nil
}

type GetRoomInstanceAccessTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *GetGameInstanceResult `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetRoomInstanceAccessTokenResponse) Reset() {
	*x = GetRoomInstanceAccessTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomInstanceAccessTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomInstanceAccessTokenResponse) ProtoMessage() {}

func (x *GetRoomInstanceAccessTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomInstanceAccessTokenResponse.ProtoReflect.Descriptor instead.
func (*GetRoomInstanceAccessTokenResponse) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{5}
}

func (x *GetRoomInstanceAccessTokenResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetRoomInstanceAccessTokenResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetRoomInstanceAccessTokenResponse) GetData() *GetGameInstanceResult {
	if x != nil {
		return x.Data
	}
	return nil
}

type ShutdownRoomInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId int64 `protobuf:"varint,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	Force  bool  `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
}

func (x *ShutdownRoomInstanceRequest) Reset() {
	*x = ShutdownRoomInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShutdownRoomInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownRoomInstanceRequest) ProtoMessage() {}

func (x *ShutdownRoomInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownRoomInstanceRequest.ProtoReflect.Descriptor instead.
func (*ShutdownRoomInstanceRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{6}
}

func (x *ShutdownRoomInstanceRequest) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *ShutdownRoomInstanceRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type ShutdownRoomInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ShutdownRoomInstanceResponse) Reset() {
	*x = ShutdownRoomInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShutdownRoomInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownRoomInstanceResponse) ProtoMessage() {}

func (x *ShutdownRoomInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownRoomInstanceResponse.ProtoReflect.Descriptor instead.
func (*ShutdownRoomInstanceResponse) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{7}
}

func (x *ShutdownRoomInstanceResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ShutdownRoomInstanceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GameSrvOpenGameConnectionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SdpOffer string `protobuf:"bytes,1,opt,name=sdpOffer,proto3" json:"sdpOffer,omitempty"`
}

func (x *GameSrvOpenGameConnectionResult) Reset() {
	*x = GameSrvOpenGameConnectionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSrvOpenGameConnectionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSrvOpenGameConnectionResult) ProtoMessage() {}

func (x *GameSrvOpenGameConnectionResult) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSrvOpenGameConnectionResult.ProtoReflect.Descriptor instead.
func (*GameSrvOpenGameConnectionResult) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{8}
}

func (x *GameSrvOpenGameConnectionResult) GetSdpOffer() string {
	if x != nil {
		return x.SdpOffer
	}
	return ""
}

type GameSrvOpenGameConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId int64           `protobuf:"varint,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	Token  string          `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Auth   *RoomMemberAuth `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *GameSrvOpenGameConnectionRequest) Reset() {
	*x = GameSrvOpenGameConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSrvOpenGameConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSrvOpenGameConnectionRequest) ProtoMessage() {}

func (x *GameSrvOpenGameConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSrvOpenGameConnectionRequest.ProtoReflect.Descriptor instead.
func (*GameSrvOpenGameConnectionRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{9}
}

func (x *GameSrvOpenGameConnectionRequest) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *GameSrvOpenGameConnectionRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GameSrvOpenGameConnectionRequest) GetAuth() *RoomMemberAuth {
	if x != nil {
		return x.Auth
	}
	return nil
}

type GameSrvOpenGameConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *GameSrvOpenGameConnectionResult `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GameSrvOpenGameConnectionResponse) Reset() {
	*x = GameSrvOpenGameConnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSrvOpenGameConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSrvOpenGameConnectionResponse) ProtoMessage() {}

func (x *GameSrvOpenGameConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSrvOpenGameConnectionResponse.ProtoReflect.Descriptor instead.
func (*GameSrvOpenGameConnectionResponse) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{10}
}

func (x *GameSrvOpenGameConnectionResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GameSrvOpenGameConnectionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GameSrvOpenGameConnectionResponse) GetData() *GameSrvOpenGameConnectionResult {
	if x != nil {
		return x.Data
	}
	return nil
}

type GameSrvSdpAnswerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId    int64           `protobuf:"varint,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	Token     string          `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Auth      *RoomMemberAuth `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
	SdpAnswer string          `protobuf:"bytes,4,opt,name=sdpAnswer,proto3" json:"sdpAnswer,omitempty"`
}

func (x *GameSrvSdpAnswerRequest) Reset() {
	*x = GameSrvSdpAnswerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSrvSdpAnswerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSrvSdpAnswerRequest) ProtoMessage() {}

func (x *GameSrvSdpAnswerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSrvSdpAnswerRequest.ProtoReflect.Descriptor instead.
func (*GameSrvSdpAnswerRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{11}
}

func (x *GameSrvSdpAnswerRequest) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *GameSrvSdpAnswerRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GameSrvSdpAnswerRequest) GetAuth() *RoomMemberAuth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *GameSrvSdpAnswerRequest) GetSdpAnswer() string {
	if x != nil {
		return x.SdpAnswer
	}
	return ""
}

type GameSrvSdpAnswerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GameSrvSdpAnswerResponse) Reset() {
	*x = GameSrvSdpAnswerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSrvSdpAnswerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSrvSdpAnswerResponse) ProtoMessage() {}

func (x *GameSrvSdpAnswerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSrvSdpAnswerResponse.ProtoReflect.Descriptor instead.
func (*GameSrvSdpAnswerResponse) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{12}
}

func (x *GameSrvSdpAnswerResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GameSrvSdpAnswerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GameSrvAddIceCandidateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId       int64           `protobuf:"varint,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	Token        string          `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Auth         *RoomMemberAuth `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
	IceCandidate string          `protobuf:"bytes,4,opt,name=iceCandidate,proto3" json:"iceCandidate,omitempty"`
}

func (x *GameSrvAddIceCandidateRequest) Reset() {
	*x = GameSrvAddIceCandidateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSrvAddIceCandidateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSrvAddIceCandidateRequest) ProtoMessage() {}

func (x *GameSrvAddIceCandidateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSrvAddIceCandidateRequest.ProtoReflect.Descriptor instead.
func (*GameSrvAddIceCandidateRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{13}
}

func (x *GameSrvAddIceCandidateRequest) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *GameSrvAddIceCandidateRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GameSrvAddIceCandidateRequest) GetAuth() *RoomMemberAuth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *GameSrvAddIceCandidateRequest) GetIceCandidate() string {
	if x != nil {
		return x.IceCandidate
	}
	return ""
}

type GameSrvAddIceCandidateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GameSrvAddIceCandidateResponse) Reset() {
	*x = GameSrvAddIceCandidateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSrvAddIceCandidateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSrvAddIceCandidateResponse) ProtoMessage() {}

func (x *GameSrvAddIceCandidateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSrvAddIceCandidateResponse.ProtoReflect.Descriptor instead.
func (*GameSrvAddIceCandidateResponse) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{14}
}

func (x *GameSrvAddIceCandidateResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GameSrvAddIceCandidateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetIceCandidateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId int64           `protobuf:"varint,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	Token  string          `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Auth   *RoomMemberAuth `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *GetIceCandidateRequest) Reset() {
	*x = GetIceCandidateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIceCandidateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIceCandidateRequest) ProtoMessage() {}

func (x *GetIceCandidateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIceCandidateRequest.ProtoReflect.Descriptor instead.
func (*GetIceCandidateRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{15}
}

func (x *GetIceCandidateRequest) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *GetIceCandidateRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetIceCandidateRequest) GetAuth() *RoomMemberAuth {
	if x != nil {
		return x.Auth
	}
	return nil
}

type GetIceCandidateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message    string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Candidates []string `protobuf:"bytes,3,rep,name=candidates,proto3" json:"candidates,omitempty"`
}

func (x *GetIceCandidateResponse) Reset() {
	*x = GetIceCandidateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIceCandidateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIceCandidateResponse) ProtoMessage() {}

func (x *GetIceCandidateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIceCandidateResponse.ProtoReflect.Descriptor instead.
func (*GetIceCandidateResponse) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{16}
}

func (x *GetIceCandidateResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetIceCandidateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetIceCandidateResponse) GetCandidates() []string {
	if x != nil {
		return x.Candidates
	}
	return nil
}

type RestartGameInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId       int64  `protobuf:"varint,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	UserId       int64  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	EmulatorCode string `protobuf:"bytes,3,opt,name=emulatorCode,proto3" json:"emulatorCode,omitempty"`
	GameName     string `protobuf:"bytes,4,opt,name=gameName,proto3" json:"gameName,omitempty"`
	GameUrl      string `protobuf:"bytes,5,opt,name=gameUrl,proto3" json:"gameUrl,omitempty"`
	EmulatorId   int64  `protobuf:"varint,6,opt,name=emulatorId,proto3" json:"emulatorId,omitempty"`
	GameId       int64  `protobuf:"varint,7,opt,name=gameId,proto3" json:"gameId,omitempty"`
	GameData     []byte `protobuf:"bytes,8,opt,name=gameData,proto3" json:"gameData,omitempty"`
	EmulatorType string `protobuf:"bytes,9,opt,name=emulatorType,proto3" json:"emulatorType,omitempty"`
}

func (x *RestartGameInstanceRequest) Reset() {
	*x = RestartGameInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestartGameInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartGameInstanceRequest) ProtoMessage() {}

func (x *RestartGameInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartGameInstanceRequest.ProtoReflect.Descriptor instead.
func (*RestartGameInstanceRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{17}
}

func (x *RestartGameInstanceRequest) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *RestartGameInstanceRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RestartGameInstanceRequest) GetEmulatorCode() string {
	if x != nil {
		return x.EmulatorCode
	}
	return ""
}

func (x *RestartGameInstanceRequest) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *RestartGameInstanceRequest) GetGameUrl() string {
	if x != nil {
		return x.GameUrl
	}
	return ""
}

func (x *RestartGameInstanceRequest) GetEmulatorId() int64 {
	if x != nil {
		return x.EmulatorId
	}
	return 0
}

func (x *RestartGameInstanceRequest) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *RestartGameInstanceRequest) GetGameData() []byte {
	if x != nil {
		return x.GameData
	}
	return nil
}

func (x *RestartGameInstanceRequest) GetEmulatorType() string {
	if x != nil {
		return x.EmulatorType
	}
	return ""
}

type RestartGameInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RestartGameInstanceResponse) Reset() {
	*x = RestartGameInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestartGameInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartGameInstanceResponse) ProtoMessage() {}

func (x *RestartGameInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartGameInstanceResponse.ProtoReflect.Descriptor instead.
func (*RestartGameInstanceResponse) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{18}
}

func (x *RestartGameInstanceResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RestartGameInstanceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GameSrvSaveGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId int64 `protobuf:"varint,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	UserId int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GameSrvSaveGameRequest) Reset() {
	*x = GameSrvSaveGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSrvSaveGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSrvSaveGameRequest) ProtoMessage() {}

func (x *GameSrvSaveGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSrvSaveGameRequest.ProtoReflect.Descriptor instead.
func (*GameSrvSaveGameRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{19}
}

func (x *GameSrvSaveGameRequest) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *GameSrvSaveGameRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GameSrvSaveResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmulatorId int64  `protobuf:"varint,1,opt,name=emulatorId,proto3" json:"emulatorId,omitempty"`
	GameId     int64  `protobuf:"varint,2,opt,name=gameId,proto3" json:"gameId,omitempty"`
	SaveData   []byte `protobuf:"bytes,3,opt,name=saveData,proto3" json:"saveData,omitempty"`
}

func (x *GameSrvSaveResult) Reset() {
	*x = GameSrvSaveResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSrvSaveResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSrvSaveResult) ProtoMessage() {}

func (x *GameSrvSaveResult) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSrvSaveResult.ProtoReflect.Descriptor instead.
func (*GameSrvSaveResult) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{20}
}

func (x *GameSrvSaveResult) GetEmulatorId() int64 {
	if x != nil {
		return x.EmulatorId
	}
	return 0
}

func (x *GameSrvSaveResult) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *GameSrvSaveResult) GetSaveData() []byte {
	if x != nil {
		return x.SaveData
	}
	return nil
}

type GameSrvSaveGameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string             `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *GameSrvSaveResult `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GameSrvSaveGameResponse) Reset() {
	*x = GameSrvSaveGameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSrvSaveGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSrvSaveGameResponse) ProtoMessage() {}

func (x *GameSrvSaveGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSrvSaveGameResponse.ProtoReflect.Descriptor instead.
func (*GameSrvSaveGameResponse) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{21}
}

func (x *GameSrvSaveGameResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GameSrvSaveGameResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GameSrvSaveGameResponse) GetData() *GameSrvSaveResult {
	if x != nil {
		return x.Data
	}
	return nil
}

type GameSrvLoadSaveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId       int64  `protobuf:"varint,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	UserId       int64  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	EmulatorCode string `protobuf:"bytes,3,opt,name=emulatorCode,proto3" json:"emulatorCode,omitempty"`
	GameName     string `protobuf:"bytes,4,opt,name=gameName,proto3" json:"gameName,omitempty"`
	GameUrl      string `protobuf:"bytes,5,opt,name=gameUrl,proto3" json:"gameUrl,omitempty"`
	EmulatorId   int64  `protobuf:"varint,6,opt,name=emulatorId,proto3" json:"emulatorId,omitempty"`
	GameId       int64  `protobuf:"varint,7,opt,name=gameId,proto3" json:"gameId,omitempty"`
	SaveData     []byte `protobuf:"bytes,8,opt,name=saveData,proto3" json:"saveData,omitempty"`
	GameData     []byte `protobuf:"bytes,9,opt,name=gameData,proto3" json:"gameData,omitempty"`
	EmulatorType string `protobuf:"bytes,10,opt,name=emulatorType,proto3" json:"emulatorType,omitempty"`
}

func (x *GameSrvLoadSaveRequest) Reset() {
	*x = GameSrvLoadSaveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSrvLoadSaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSrvLoadSaveRequest) ProtoMessage() {}

func (x *GameSrvLoadSaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSrvLoadSaveRequest.ProtoReflect.Descriptor instead.
func (*GameSrvLoadSaveRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{22}
}

func (x *GameSrvLoadSaveRequest) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *GameSrvLoadSaveRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GameSrvLoadSaveRequest) GetEmulatorCode() string {
	if x != nil {
		return x.EmulatorCode
	}
	return ""
}

func (x *GameSrvLoadSaveRequest) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *GameSrvLoadSaveRequest) GetGameUrl() string {
	if x != nil {
		return x.GameUrl
	}
	return ""
}

func (x *GameSrvLoadSaveRequest) GetEmulatorId() int64 {
	if x != nil {
		return x.EmulatorId
	}
	return 0
}

func (x *GameSrvLoadSaveRequest) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *GameSrvLoadSaveRequest) GetSaveData() []byte {
	if x != nil {
		return x.SaveData
	}
	return nil
}

func (x *GameSrvLoadSaveRequest) GetGameData() []byte {
	if x != nil {
		return x.GameData
	}
	return nil
}

func (x *GameSrvLoadSaveRequest) GetEmulatorType() string {
	if x != nil {
		return x.EmulatorType
	}
	return ""
}

type GameSrvLoadSaveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GameSrvLoadSaveResponse) Reset() {
	*x = GameSrvLoadSaveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSrvLoadSaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSrvLoadSaveResponse) ProtoMessage() {}

func (x *GameSrvLoadSaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSrvLoadSaveResponse.ProtoReflect.Descriptor instead.
func (*GameSrvLoadSaveResponse) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{23}
}

func (x *GameSrvLoadSaveResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GameSrvLoadSaveResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListOnlineRoomMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId int64 `protobuf:"varint,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
}

func (x *ListOnlineRoomMemberRequest) Reset() {
	*x = ListOnlineRoomMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOnlineRoomMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOnlineRoomMemberRequest) ProtoMessage() {}

func (x *ListOnlineRoomMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOnlineRoomMemberRequest.ProtoReflect.Descriptor instead.
func (*ListOnlineRoomMemberRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{24}
}

func (x *ListOnlineRoomMemberRequest) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

type ListOnlineRoomMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          int32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RoomMemberIds []int64 `protobuf:"varint,3,rep,packed,name=roomMemberIds,proto3" json:"roomMemberIds,omitempty"`
}

func (x *ListOnlineRoomMemberResponse) Reset() {
	*x = ListOnlineRoomMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOnlineRoomMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOnlineRoomMemberResponse) ProtoMessage() {}

func (x *ListOnlineRoomMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOnlineRoomMemberResponse.ProtoReflect.Descriptor instead.
func (*ListOnlineRoomMemberResponse) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{25}
}

func (x *ListOnlineRoomMemberResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListOnlineRoomMemberResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListOnlineRoomMemberResponse) GetRoomMemberIds() []int64 {
	if x != nil {
		return x.RoomMemberIds
	}
	return nil
}

type GameSrvGetControllerPlayersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId int64 `protobuf:"varint,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
}

func (x *GameSrvGetControllerPlayersRequest) Reset() {
	*x = GameSrvGetControllerPlayersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSrvGetControllerPlayersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSrvGetControllerPlayersRequest) ProtoMessage() {}

func (x *GameSrvGetControllerPlayersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSrvGetControllerPlayersRequest.ProtoReflect.Descriptor instead.
func (*GameSrvGetControllerPlayersRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{26}
}

func (x *GameSrvGetControllerPlayersRequest) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

type GameSrvControllerPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       int64  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Label        string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	ControllerId int32  `protobuf:"varint,3,opt,name=controllerId,proto3" json:"controllerId,omitempty"`
}

func (x *GameSrvControllerPlayer) Reset() {
	*x = GameSrvControllerPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSrvControllerPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSrvControllerPlayer) ProtoMessage() {}

func (x *GameSrvControllerPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSrvControllerPlayer.ProtoReflect.Descriptor instead.
func (*GameSrvControllerPlayer) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{27}
}

func (x *GameSrvControllerPlayer) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GameSrvControllerPlayer) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *GameSrvControllerPlayer) GetControllerId() int32 {
	if x != nil {
		return x.ControllerId
	}
	return 0
}

type GameSrvGetControllerPlayersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*GameSrvControllerPlayer `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GameSrvGetControllerPlayersResponse) Reset() {
	*x = GameSrvGetControllerPlayersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSrvGetControllerPlayersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSrvGetControllerPlayersResponse) ProtoMessage() {}

func (x *GameSrvGetControllerPlayersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSrvGetControllerPlayersResponse.ProtoReflect.Descriptor instead.
func (*GameSrvGetControllerPlayersResponse) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{28}
}

func (x *GameSrvGetControllerPlayersResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GameSrvGetControllerPlayersResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GameSrvGetControllerPlayersResponse) GetData() []*GameSrvControllerPlayer {
	if x != nil {
		return x.Data
	}
	return nil
}

type GameSrvSetControllerPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId            int64                      `protobuf:"varint,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	ControllerPlayers []*GameSrvControllerPlayer `protobuf:"bytes,2,rep,name=controllerPlayers,proto3" json:"controllerPlayers,omitempty"`
}

func (x *GameSrvSetControllerPlayerRequest) Reset() {
	*x = GameSrvSetControllerPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSrvSetControllerPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSrvSetControllerPlayerRequest) ProtoMessage() {}

func (x *GameSrvSetControllerPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSrvSetControllerPlayerRequest.ProtoReflect.Descriptor instead.
func (*GameSrvSetControllerPlayerRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{29}
}

func (x *GameSrvSetControllerPlayerRequest) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *GameSrvSetControllerPlayerRequest) GetControllerPlayers() []*GameSrvControllerPlayer {
	if x != nil {
		return x.ControllerPlayers
	}
	return nil
}

type GameSrvSetControllerPlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*GameSrvControllerPlayer `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GameSrvSetControllerPlayerResponse) Reset() {
	*x = GameSrvSetControllerPlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSrvSetControllerPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSrvSetControllerPlayerResponse) ProtoMessage() {}

func (x *GameSrvSetControllerPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSrvSetControllerPlayerResponse.ProtoReflect.Descriptor instead.
func (*GameSrvSetControllerPlayerResponse) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{30}
}

func (x *GameSrvSetControllerPlayerResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GameSrvSetControllerPlayerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GameSrvSetControllerPlayerResponse) GetData() []*GameSrvControllerPlayer {
	if x != nil {
		return x.Data
	}
	return nil
}

type GameSrvGraphicOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HighResolution bool `protobuf:"varint,1,opt,name=highResolution,proto3" json:"highResolution,omitempty"`
}

func (x *GameSrvGraphicOptions) Reset() {
	*x = GameSrvGraphicOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSrvGraphicOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSrvGraphicOptions) ProtoMessage() {}

func (x *GameSrvGraphicOptions) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSrvGraphicOptions.ProtoReflect.Descriptor instead.
func (*GameSrvGraphicOptions) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{31}
}

func (x *GameSrvGraphicOptions) GetHighResolution() bool {
	if x != nil {
		return x.HighResolution
	}
	return false
}

type GameSrvGetGraphicOptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId int64 `protobuf:"varint,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
}

func (x *GameSrvGetGraphicOptionsRequest) Reset() {
	*x = GameSrvGetGraphicOptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSrvGetGraphicOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSrvGetGraphicOptionsRequest) ProtoMessage() {}

func (x *GameSrvGetGraphicOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSrvGetGraphicOptionsRequest.ProtoReflect.Descriptor instead.
func (*GameSrvGetGraphicOptionsRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{32}
}

func (x *GameSrvGetGraphicOptionsRequest) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

type GameSrvGetGraphicOptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *GameSrvGraphicOptions `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GameSrvGetGraphicOptionsResponse) Reset() {
	*x = GameSrvGetGraphicOptionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSrvGetGraphicOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSrvGetGraphicOptionsResponse) ProtoMessage() {}

func (x *GameSrvGetGraphicOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSrvGetGraphicOptionsResponse.ProtoReflect.Descriptor instead.
func (*GameSrvGetGraphicOptionsResponse) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{33}
}

func (x *GameSrvGetGraphicOptionsResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GameSrvGetGraphicOptionsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GameSrvGetGraphicOptionsResponse) GetData() *GameSrvGraphicOptions {
	if x != nil {
		return x.Data
	}
	return nil
}

type GameSrvSetGraphicOptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId         int64                  `protobuf:"varint,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	GraphicOptions *GameSrvGraphicOptions `protobuf:"bytes,2,opt,name=graphicOptions,proto3" json:"graphicOptions,omitempty"`
}

func (x *GameSrvSetGraphicOptionsRequest) Reset() {
	*x = GameSrvSetGraphicOptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSrvSetGraphicOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSrvSetGraphicOptionsRequest) ProtoMessage() {}

func (x *GameSrvSetGraphicOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSrvSetGraphicOptionsRequest.ProtoReflect.Descriptor instead.
func (*GameSrvSetGraphicOptionsRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{34}
}

func (x *GameSrvSetGraphicOptionsRequest) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *GameSrvSetGraphicOptionsRequest) GetGraphicOptions() *GameSrvGraphicOptions {
	if x != nil {
		return x.GraphicOptions
	}
	return nil
}

type GameSrvSetGraphicOptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GameSrvSetGraphicOptionsResponse) Reset() {
	*x = GameSrvSetGraphicOptionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSrvSetGraphicOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSrvSetGraphicOptionsResponse) ProtoMessage() {}

func (x *GameSrvSetGraphicOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSrvSetGraphicOptionsResponse.ProtoReflect.Descriptor instead.
func (*GameSrvSetGraphicOptionsResponse) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{35}
}

func (x *GameSrvSetGraphicOptionsResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GameSrvSetGraphicOptionsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GameSrvApplyMacroRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId int64    `protobuf:"varint,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	Keys   []string `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
	UserId int64    `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GameSrvApplyMacroRequest) Reset() {
	*x = GameSrvApplyMacroRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSrvApplyMacroRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSrvApplyMacroRequest) ProtoMessage() {}

func (x *GameSrvApplyMacroRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSrvApplyMacroRequest.ProtoReflect.Descriptor instead.
func (*GameSrvApplyMacroRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{36}
}

func (x *GameSrvApplyMacroRequest) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *GameSrvApplyMacroRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *GameSrvApplyMacroRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GameSrvApplyMacroResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GameSrvApplyMacroResponse) Reset() {
	*x = GameSrvApplyMacroResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSrvApplyMacroResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSrvApplyMacroResponse) ProtoMessage() {}

func (x *GameSrvApplyMacroResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSrvApplyMacroResponse.ProtoReflect.Descriptor instead.
func (*GameSrvApplyMacroResponse) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{37}
}

func (x *GameSrvApplyMacroResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GameSrvApplyMacroResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_game_proto protoreflect.FileDescriptor

var file_game_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4d,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x22, 0x4e, 0x0a,
	0x0e, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0xd1, 0x01,
	0x0a, 0x17, 0x4f, 0x70, 0x65, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f,
	0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d,
	0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x77, 0x0a, 0x18, 0x4f, 0x70, 0x65, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x63, 0x0a, 0x21, 0x47, 0x65,
	0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22,
	0x81, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x4b, 0x0a, 0x1b, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x52,
	0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x22, 0x4c, 0x0a, 0x1c, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x6f, 0x6f, 0x6d,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3d,
	0x0a, 0x1f, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x4f, 0x70, 0x65, 0x6e, 0x47, 0x61, 0x6d,
	0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x64, 0x70, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x64, 0x70, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x22, 0x78, 0x0a,
	0x20, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x4f, 0x70, 0x65, 0x6e, 0x47, 0x61, 0x6d, 0x65,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x26, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0x8a, 0x01, 0x0a, 0x21, 0x47, 0x61, 0x6d, 0x65,
	0x53, 0x72, 0x76, 0x4f, 0x70, 0x65, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x4f, 0x70, 0x65, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x8d, 0x01, 0x0a, 0x17, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76,
	0x53, 0x64, 0x70, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26,
	0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x64, 0x70, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x64, 0x70, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x22, 0x48, 0x0a, 0x18, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x53,
	0x64, 0x70, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x99,
	0x01, 0x0a, 0x1d, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x41, 0x64, 0x64, 0x49, 0x63, 0x65,
	0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26,
	0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6e,
	0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x63,
	0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x22, 0x4e, 0x0a, 0x1e, 0x47, 0x61,
	0x6d, 0x65, 0x53, 0x72, 0x76, 0x41, 0x64, 0x64, 0x49, 0x63, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x6e, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x49, 0x63, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x26, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0x67, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x49, 0x63, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x73, 0x22, 0x9e, 0x02, 0x0a, 0x1a, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a,
	0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x61,
	0x6d, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x4b, 0x0a, 0x1b, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x48, 0x0a, 0x16, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x53, 0x61, 0x76, 0x65,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f,
	0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x11, 0x47,
	0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x61, 0x76, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x73, 0x61, 0x76, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x22, 0x72, 0x0a, 0x17, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x53,
	0x61, 0x76, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb6, 0x02, 0x0a, 0x16, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x72, 0x76, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x75, 0x6c, 0x61,
	0x74, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1e, 0x0a,
	0x0a, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67,
	0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x61, 0x76, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x73, 0x61, 0x76, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a,
	0x0c, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x47, 0x0a, 0x17, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x4c, 0x6f, 0x61, 0x64,
	0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x35, 0x0a, 0x1b, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f,
	0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49,
	0x64, 0x22, 0x72, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x72, 0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x3c, 0x0a, 0x22, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f,
	0x6d, 0x49, 0x64, 0x22, 0x6b, 0x0a, 0x17, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x84, 0x01, 0x0a, 0x23, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72,
	0x76, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x86, 0x01, 0x0a, 0x21, 0x47, 0x61, 0x6d, 0x65,
	0x53, 0x72, 0x76, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x11, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x22, 0x83, 0x01, 0x0a, 0x22, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x53, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3f, 0x0a, 0x15, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72,
	0x76, 0x47, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x26, 0x0a, 0x0e, 0x68, 0x69, 0x67, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x69, 0x67, 0x68, 0x52, 0x65, 0x73,
	0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x39, 0x0a, 0x1f, 0x47, 0x61, 0x6d, 0x65, 0x53,
	0x72, 0x76, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x64, 0x22, 0x7f, 0x0a, 0x20, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x7c, 0x0a, 0x1f, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x53, 0x65,
	0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x41,
	0x0a, 0x0e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x53, 0x72, 0x76, 0x47, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x0e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x50, 0x0a, 0x20, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x53, 0x65, 0x74, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x5e, 0x0a, 0x18, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x19, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xa5,
	0x0b, 0x0a, 0x04, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x4f, 0x0a, 0x10, 0x4f, 0x70, 0x65, 0x6e, 0x47,
	0x61, 0x6d, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1b, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70,
	0x65, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x25, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x14, 0x53, 0x68, 0x75, 0x74, 0x64,
	0x6f, 0x77, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x1f, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x6f, 0x6f,
	0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x6f,
	0x6f, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x12, 0x4f, 0x70, 0x65, 0x6e, 0x47, 0x61, 0x6d, 0x65,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x4f, 0x70, 0x65, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x4f, 0x70, 0x65,
	0x6e, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x09, 0x53, 0x64, 0x70,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x53, 0x72, 0x76, 0x53, 0x64, 0x70, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76,
	0x53, 0x64, 0x70, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x49, 0x63, 0x65, 0x43, 0x61, 0x6e,
	0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x53, 0x72, 0x76, 0x41, 0x64, 0x64, 0x49, 0x63, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x41, 0x64, 0x64, 0x49, 0x63, 0x65, 0x43, 0x61, 0x6e, 0x64,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x49, 0x63, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x63, 0x65, 0x43, 0x61,
	0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x63, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a,
	0x13, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x08, 0x53, 0x61, 0x76, 0x65, 0x47,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76,
	0x53, 0x61, 0x76, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x53, 0x61, 0x76, 0x65,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45,
	0x0a, 0x08, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x61, 0x76, 0x65, 0x12, 0x1a, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x61, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x53, 0x72, 0x76, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x6f, 0x6f,
	0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x6f,
	0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x69, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x26, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a,
	0x13, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72,
	0x76, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x70,
	0x68, 0x69, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x69,
	0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x69, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x53, 0x65, 0x74, 0x47, 0x72, 0x61, 0x70,
	0x68, 0x69, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x53, 0x65,
	0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0a, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x12, 0x1c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x72, 0x76, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53,
	0x72, 0x76, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x13, 0x5a, 0x11, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x72,
	0x76, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_game_proto_rawDescOnce sync.Once
	file_game_proto_rawDescData = file_game_proto_rawDesc
)

func file_game_proto_rawDescGZIP() []byte {
	file_game_proto_rawDescOnce.Do(func() {
		file_game_proto_rawDescData = protoimpl.X.CompressGZIP(file_game_proto_rawDescData)
	})
	return file_game_proto_rawDescData
}

var file_game_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_game_proto_goTypes = []any{
	(*GetGameInstanceResult)(nil),               // 0: v1.GetGameInstanceResult
	(*RoomMemberAuth)(nil),                      // 1: v1.RoomMemberAuth
	(*OpenGameInstanceRequest)(nil),             // 2: v1.OpenGameInstanceRequest
	(*OpenGameInstanceResponse)(nil),            // 3: v1.OpenGameInstanceResponse
	(*GetRoomInstanceAccessTokenRequest)(nil),   // 4: v1.GetRoomInstanceAccessTokenRequest
	(*GetRoomInstanceAccessTokenResponse)(nil),  // 5: v1.GetRoomInstanceAccessTokenResponse
	(*ShutdownRoomInstanceRequest)(nil),         // 6: v1.ShutdownRoomInstanceRequest
	(*ShutdownRoomInstanceResponse)(nil),        // 7: v1.ShutdownRoomInstanceResponse
	(*GameSrvOpenGameConnectionResult)(nil),     // 8: v1.GameSrvOpenGameConnectionResult
	(*GameSrvOpenGameConnectionRequest)(nil),    // 9: v1.GameSrvOpenGameConnectionRequest
	(*GameSrvOpenGameConnectionResponse)(nil),   // 10: v1.GameSrvOpenGameConnectionResponse
	(*GameSrvSdpAnswerRequest)(nil),             // 11: v1.GameSrvSdpAnswerRequest
	(*GameSrvSdpAnswerResponse)(nil),            // 12: v1.GameSrvSdpAnswerResponse
	(*GameSrvAddIceCandidateRequest)(nil),       // 13: v1.GameSrvAddIceCandidateRequest
	(*GameSrvAddIceCandidateResponse)(nil),      // 14: v1.GameSrvAddIceCandidateResponse
	(*GetIceCandidateRequest)(nil),              // 15: v1.GetIceCandidateRequest
	(*GetIceCandidateResponse)(nil),             // 16: v1.GetIceCandidateResponse
	(*RestartGameInstanceRequest)(nil),          // 17: v1.RestartGameInstanceRequest
	(*RestartGameInstanceResponse)(nil),         // 18: v1.RestartGameInstanceResponse
	(*GameSrvSaveGameRequest)(nil),              // 19: v1.GameSrvSaveGameRequest
	(*GameSrvSaveResult)(nil),                   // 20: v1.GameSrvSaveResult
	(*GameSrvSaveGameResponse)(nil),             // 21: v1.GameSrvSaveGameResponse
	(*GameSrvLoadSaveRequest)(nil),              // 22: v1.GameSrvLoadSaveRequest
	(*GameSrvLoadSaveResponse)(nil),             // 23: v1.GameSrvLoadSaveResponse
	(*ListOnlineRoomMemberRequest)(nil),         // 24: v1.ListOnlineRoomMemberRequest
	(*ListOnlineRoomMemberResponse)(nil),        // 25: v1.ListOnlineRoomMemberResponse
	(*GameSrvGetControllerPlayersRequest)(nil),  // 26: v1.GameSrvGetControllerPlayersRequest
	(*GameSrvControllerPlayer)(nil),             // 27: v1.GameSrvControllerPlayer
	(*GameSrvGetControllerPlayersResponse)(nil), // 28: v1.GameSrvGetControllerPlayersResponse
	(*GameSrvSetControllerPlayerRequest)(nil),   // 29: v1.GameSrvSetControllerPlayerRequest
	(*GameSrvSetControllerPlayerResponse)(nil),  // 30: v1.GameSrvSetControllerPlayerResponse
	(*GameSrvGraphicOptions)(nil),               // 31: v1.GameSrvGraphicOptions
	(*GameSrvGetGraphicOptionsRequest)(nil),     // 32: v1.GameSrvGetGraphicOptionsRequest
	(*GameSrvGetGraphicOptionsResponse)(nil),    // 33: v1.GameSrvGetGraphicOptionsResponse
	(*GameSrvSetGraphicOptionsRequest)(nil),     // 34: v1.GameSrvSetGraphicOptionsRequest
	(*GameSrvSetGraphicOptionsResponse)(nil),    // 35: v1.GameSrvSetGraphicOptionsResponse
	(*GameSrvApplyMacroRequest)(nil),            // 36: v1.GameSrvApplyMacroRequest
	(*GameSrvApplyMacroResponse)(nil),           // 37: v1.GameSrvApplyMacroResponse
}
var file_game_proto_depIdxs = []int32{
	1,  // 0: v1.OpenGameInstanceRequest.auth:type_name -> v1.RoomMemberAuth
	0,  // 1: v1.OpenGameInstanceResponse.data:type_name -> v1.GetGameInstanceResult
	1,  // 2: v1.GetRoomInstanceAccessTokenRequest.auth:type_name -> v1.RoomMemberAuth
	0,  // 3: v1.GetRoomInstanceAccessTokenResponse.data:type_name -> v1.GetGameInstanceResult
	1,  // 4: v1.GameSrvOpenGameConnectionRequest.auth:type_name -> v1.RoomMemberAuth
	8,  // 5: v1.GameSrvOpenGameConnectionResponse.data:type_name -> v1.GameSrvOpenGameConnectionResult
	1,  // 6: v1.GameSrvSdpAnswerRequest.auth:type_name -> v1.RoomMemberAuth
	1,  // 7: v1.GameSrvAddIceCandidateRequest.auth:type_name -> v1.RoomMemberAuth
	1,  // 8: v1.GetIceCandidateRequest.auth:type_name -> v1.RoomMemberAuth
	20, // 9: v1.GameSrvSaveGameResponse.data:type_name -> v1.GameSrvSaveResult
	27, // 10: v1.GameSrvGetControllerPlayersResponse.data:type_name -> v1.GameSrvControllerPlayer
	27, // 11: v1.GameSrvSetControllerPlayerRequest.controllerPlayers:type_name -> v1.GameSrvControllerPlayer
	27, // 12: v1.GameSrvSetControllerPlayerResponse.data:type_name -> v1.GameSrvControllerPlayer
	31, // 13: v1.GameSrvGetGraphicOptionsResponse.data:type_name -> v1.GameSrvGraphicOptions
	31, // 14: v1.GameSrvSetGraphicOptionsRequest.graphicOptions:type_name -> v1.GameSrvGraphicOptions
	2,  // 15: v1.Game.OpenGameInstance:input_type -> v1.OpenGameInstanceRequest
	4,  // 16: v1.Game.GetRoomInstanceAccessToken:input_type -> v1.GetRoomInstanceAccessTokenRequest
	6,  // 17: v1.Game.ShutdownRoomInstance:input_type -> v1.ShutdownRoomInstanceRequest
	9,  // 18: v1.Game.OpenGameConnection:input_type -> v1.GameSrvOpenGameConnectionRequest
	11, // 19: v1.Game.SdpAnswer:input_type -> v1.GameSrvSdpAnswerRequest
	13, // 20: v1.Game.AddIceCandidate:input_type -> v1.GameSrvAddIceCandidateRequest
	15, // 21: v1.Game.GetIceCandidate:input_type -> v1.GetIceCandidateRequest
	17, // 22: v1.Game.RestartGameInstance:input_type -> v1.RestartGameInstanceRequest
	19, // 23: v1.Game.SaveGame:input_type -> v1.GameSrvSaveGameRequest
	22, // 24: v1.Game.LoadSave:input_type -> v1.GameSrvLoadSaveRequest
	24, // 25: v1.Game.ListOnlineRoomMember:input_type -> v1.ListOnlineRoomMemberRequest
	26, // 26: v1.Game.GetControllerPlayers:input_type -> v1.GameSrvGetControllerPlayersRequest
	29, // 27: v1.Game.SetControllerPlayer:input_type -> v1.GameSrvSetControllerPlayerRequest
	32, // 28: v1.Game.GetGraphicOptions:input_type -> v1.GameSrvGetGraphicOptionsRequest
	34, // 29: v1.Game.SetGraphicOptions:input_type -> v1.GameSrvSetGraphicOptionsRequest
	36, // 30: v1.Game.ApplyMacro:input_type -> v1.GameSrvApplyMacroRequest
	3,  // 31: v1.Game.OpenGameInstance:output_type -> v1.OpenGameInstanceResponse
	5,  // 32: v1.Game.GetRoomInstanceAccessToken:output_type -> v1.GetRoomInstanceAccessTokenResponse
	7,  // 33: v1.Game.ShutdownRoomInstance:output_type -> v1.ShutdownRoomInstanceResponse
	10, // 34: v1.Game.OpenGameConnection:output_type -> v1.GameSrvOpenGameConnectionResponse
	12, // 35: v1.Game.SdpAnswer:output_type -> v1.GameSrvSdpAnswerResponse
	14, // 36: v1.Game.AddIceCandidate:output_type -> v1.GameSrvAddIceCandidateResponse
	16, // 37: v1.Game.GetIceCandidate:output_type -> v1.GetIceCandidateResponse
	18, // 38: v1.Game.RestartGameInstance:output_type -> v1.RestartGameInstanceResponse
	21, // 39: v1.Game.SaveGame:output_type -> v1.GameSrvSaveGameResponse
	23, // 40: v1.Game.LoadSave:output_type -> v1.GameSrvLoadSaveResponse
	25, // 41: v1.Game.ListOnlineRoomMember:output_type -> v1.ListOnlineRoomMemberResponse
	28, // 42: v1.Game.GetControllerPlayers:output_type -> v1.GameSrvGetControllerPlayersResponse
	30, // 43: v1.Game.SetControllerPlayer:output_type -> v1.GameSrvSetControllerPlayerResponse
	33, // 44: v1.Game.GetGraphicOptions:output_type -> v1.GameSrvGetGraphicOptionsResponse
	35, // 45: v1.Game.SetGraphicOptions:output_type -> v1.GameSrvSetGraphicOptionsResponse
	37, // 46: v1.Game.ApplyMacro:output_type -> v1.GameSrvApplyMacroResponse
	31, // [31:47] is the sub-list for method output_type
	15, // [15:31] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_game_proto_init() }
func file_game_proto_init() {
	if File_game_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_game_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetGameInstanceResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*RoomMemberAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*OpenGameInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*OpenGameInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetRoomInstanceAccessTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetRoomInstanceAccessTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ShutdownRoomInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ShutdownRoomInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GameSrvOpenGameConnectionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GameSrvOpenGameConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GameSrvOpenGameConnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GameSrvSdpAnswerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GameSrvSdpAnswerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GameSrvAddIceCandidateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*GameSrvAddIceCandidateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*GetIceCandidateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetIceCandidateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*RestartGameInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*RestartGameInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*GameSrvSaveGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*GameSrvSaveResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*GameSrvSaveGameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*GameSrvLoadSaveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*GameSrvLoadSaveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*ListOnlineRoomMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*ListOnlineRoomMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*GameSrvGetControllerPlayersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*GameSrvControllerPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*GameSrvGetControllerPlayersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*GameSrvSetControllerPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*GameSrvSetControllerPlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*GameSrvGraphicOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*GameSrvGetGraphicOptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*GameSrvGetGraphicOptionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*GameSrvSetGraphicOptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*GameSrvSetGraphicOptionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*GameSrvApplyMacroRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*GameSrvApplyMacroResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_game_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_game_proto_goTypes,
		DependencyIndexes: file_game_proto_depIdxs,
		MessageInfos:      file_game_proto_msgTypes,
	}.Build()
	File_game_proto = out.File
	file_game_proto_rawDesc = nil
	file_game_proto_goTypes = nil
	file_game_proto_depIdxs = nil
}
