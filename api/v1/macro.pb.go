// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: macro.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MacroDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MacroId      int64    `protobuf:"varint,1,opt,name=macroId,proto3" json:"macroId,omitempty"`
	MacroName    string   `protobuf:"bytes,2,opt,name=macroName,proto3" json:"macroName,omitempty"`
	EmulatorType string   `protobuf:"bytes,3,opt,name=emulatorType,proto3" json:"emulatorType,omitempty"`
	AddUser      int64    `protobuf:"varint,4,opt,name=addUser,proto3" json:"addUser,omitempty"`
	KeyCodes     []string `protobuf:"bytes,5,rep,name=keyCodes,proto3" json:"keyCodes,omitempty"`
	ShortcutKey  string   `protobuf:"bytes,6,opt,name=shortcutKey,proto3" json:"shortcutKey,omitempty"`
}

func (x *MacroDto) Reset() {
	*x = MacroDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_macro_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MacroDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MacroDto) ProtoMessage() {}

func (x *MacroDto) ProtoReflect() protoreflect.Message {
	mi := &file_macro_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MacroDto.ProtoReflect.Descriptor instead.
func (*MacroDto) Descriptor() ([]byte, []int) {
	return file_macro_proto_rawDescGZIP(), []int{0}
}

func (x *MacroDto) GetMacroId() int64 {
	if x != nil {
		return x.MacroId
	}
	return 0
}

func (x *MacroDto) GetMacroName() string {
	if x != nil {
		return x.MacroName
	}
	return ""
}

func (x *MacroDto) GetEmulatorType() string {
	if x != nil {
		return x.EmulatorType
	}
	return ""
}

func (x *MacroDto) GetAddUser() int64 {
	if x != nil {
		return x.AddUser
	}
	return 0
}

func (x *MacroDto) GetKeyCodes() []string {
	if x != nil {
		return x.KeyCodes
	}
	return nil
}

func (x *MacroDto) GetShortcutKey() string {
	if x != nil {
		return x.ShortcutKey
	}
	return ""
}

type ListMacrosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmulatorType string `protobuf:"bytes,1,opt,name=emulatorType,proto3" json:"emulatorType,omitempty"`
}

func (x *ListMacrosRequest) Reset() {
	*x = ListMacrosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_macro_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMacrosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMacrosRequest) ProtoMessage() {}

func (x *ListMacrosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_macro_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMacrosRequest.ProtoReflect.Descriptor instead.
func (*ListMacrosRequest) Descriptor() ([]byte, []int) {
	return file_macro_proto_rawDescGZIP(), []int{1}
}

func (x *ListMacrosRequest) GetEmulatorType() string {
	if x != nil {
		return x.EmulatorType
	}
	return ""
}

type ListMacrosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*MacroDto `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListMacrosResponse) Reset() {
	*x = ListMacrosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_macro_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMacrosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMacrosResponse) ProtoMessage() {}

func (x *ListMacrosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_macro_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMacrosResponse.ProtoReflect.Descriptor instead.
func (*ListMacrosResponse) Descriptor() ([]byte, []int) {
	return file_macro_proto_rawDescGZIP(), []int{2}
}

func (x *ListMacrosResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListMacrosResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListMacrosResponse) GetData() []*MacroDto {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateMacroRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MacroName    string   `protobuf:"bytes,1,opt,name=macroName,proto3" json:"macroName,omitempty"`
	EmulatorType string   `protobuf:"bytes,2,opt,name=emulatorType,proto3" json:"emulatorType,omitempty"`
	KeyCodes     []string `protobuf:"bytes,3,rep,name=keyCodes,proto3" json:"keyCodes,omitempty"`
	ShortcutKey  string   `protobuf:"bytes,4,opt,name=shortcutKey,proto3" json:"shortcutKey,omitempty"`
}

func (x *CreateMacroRequest) Reset() {
	*x = CreateMacroRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_macro_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMacroRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMacroRequest) ProtoMessage() {}

func (x *CreateMacroRequest) ProtoReflect() protoreflect.Message {
	mi := &file_macro_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMacroRequest.ProtoReflect.Descriptor instead.
func (*CreateMacroRequest) Descriptor() ([]byte, []int) {
	return file_macro_proto_rawDescGZIP(), []int{3}
}

func (x *CreateMacroRequest) GetMacroName() string {
	if x != nil {
		return x.MacroName
	}
	return ""
}

func (x *CreateMacroRequest) GetEmulatorType() string {
	if x != nil {
		return x.EmulatorType
	}
	return ""
}

func (x *CreateMacroRequest) GetKeyCodes() []string {
	if x != nil {
		return x.KeyCodes
	}
	return nil
}

func (x *CreateMacroRequest) GetShortcutKey() string {
	if x != nil {
		return x.ShortcutKey
	}
	return ""
}

type CreateMacroResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateMacroResponse) Reset() {
	*x = CreateMacroResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_macro_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMacroResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMacroResponse) ProtoMessage() {}

func (x *CreateMacroResponse) ProtoReflect() protoreflect.Message {
	mi := &file_macro_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMacroResponse.ProtoReflect.Descriptor instead.
func (*CreateMacroResponse) Descriptor() ([]byte, []int) {
	return file_macro_proto_rawDescGZIP(), []int{4}
}

func (x *CreateMacroResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateMacroResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteMacroRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MacroId int64 `protobuf:"varint,1,opt,name=macroId,proto3" json:"macroId,omitempty"`
}

func (x *DeleteMacroRequest) Reset() {
	*x = DeleteMacroRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_macro_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMacroRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMacroRequest) ProtoMessage() {}

func (x *DeleteMacroRequest) ProtoReflect() protoreflect.Message {
	mi := &file_macro_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMacroRequest.ProtoReflect.Descriptor instead.
func (*DeleteMacroRequest) Descriptor() ([]byte, []int) {
	return file_macro_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteMacroRequest) GetMacroId() int64 {
	if x != nil {
		return x.MacroId
	}
	return 0
}

type DeleteMacroResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteMacroResponse) Reset() {
	*x = DeleteMacroResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_macro_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMacroResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMacroResponse) ProtoMessage() {}

func (x *DeleteMacroResponse) ProtoReflect() protoreflect.Message {
	mi := &file_macro_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMacroResponse.ProtoReflect.Descriptor instead.
func (*DeleteMacroResponse) Descriptor() ([]byte, []int) {
	return file_macro_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteMacroResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteMacroResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ApplyMacroRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MacroId int64 `protobuf:"varint,1,opt,name=macroId,proto3" json:"macroId,omitempty"`
	RoomId  int64 `protobuf:"varint,2,opt,name=roomId,proto3" json:"roomId,omitempty"`
}

func (x *ApplyMacroRequest) Reset() {
	*x = ApplyMacroRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_macro_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyMacroRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyMacroRequest) ProtoMessage() {}

func (x *ApplyMacroRequest) ProtoReflect() protoreflect.Message {
	mi := &file_macro_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyMacroRequest.ProtoReflect.Descriptor instead.
func (*ApplyMacroRequest) Descriptor() ([]byte, []int) {
	return file_macro_proto_rawDescGZIP(), []int{7}
}

func (x *ApplyMacroRequest) GetMacroId() int64 {
	if x != nil {
		return x.MacroId
	}
	return 0
}

func (x *ApplyMacroRequest) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

type ApplyMacroResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ApplyMacroResponse) Reset() {
	*x = ApplyMacroResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_macro_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyMacroResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyMacroResponse) ProtoMessage() {}

func (x *ApplyMacroResponse) ProtoReflect() protoreflect.Message {
	mi := &file_macro_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyMacroResponse.ProtoReflect.Descriptor instead.
func (*ApplyMacroResponse) Descriptor() ([]byte, []int) {
	return file_macro_proto_rawDescGZIP(), []int{8}
}

func (x *ApplyMacroResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ApplyMacroResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_macro_proto protoreflect.FileDescriptor

var file_macro_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76,
	0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xbe, 0x01, 0x0a, 0x08, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x44, 0x74, 0x6f, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x61, 0x63, 0x72, 0x6f, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d,
	0x61, 0x63, 0x72, 0x6f, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x72, 0x6f,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x75, 0x6c,
	0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x64, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x63, 0x75, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x63, 0x75, 0x74, 0x4b, 0x65, 0x79,
	0x22, 0x37, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x64, 0x0a, 0x12, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x44, 0x74, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x94, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x72, 0x6f,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x75, 0x6c,
	0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x63, 0x75, 0x74,
	0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x63, 0x75, 0x74, 0x4b, 0x65, 0x79, 0x22, 0x43, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x63, 0x72, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2e, 0x0a, 0x12, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x13, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x45, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x4d, 0x61, 0x63, 0x72, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xe9, 0x02, 0x0a, 0x05,
	0x4d, 0x61, 0x63, 0x72, 0x6f, 0x12, 0x53, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63,
	0x72, 0x6f, 0x73, 0x12, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63,
	0x72, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x73, 0x12, 0x59, 0x0a, 0x0b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x12, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63,
	0x72, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x13, 0x3a, 0x01, 0x2a, 0x22, 0x0e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d,
	0x61, 0x63, 0x72, 0x6f, 0x73, 0x12, 0x52, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x61, 0x63, 0x72, 0x6f, 0x12, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x61, 0x63, 0x72, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x2a, 0x0a, 0x2f,
	0x76, 0x31, 0x2f, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x73, 0x12, 0x5c, 0x0a, 0x0a, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x12, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01,
	0x2a, 0x22, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x63, 0x72, 0x6f,
	0x73, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x42, 0x14, 0x5a, 0x12, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_macro_proto_rawDescOnce sync.Once
	file_macro_proto_rawDescData = file_macro_proto_rawDesc
)

func file_macro_proto_rawDescGZIP() []byte {
	file_macro_proto_rawDescOnce.Do(func() {
		file_macro_proto_rawDescData = protoimpl.X.CompressGZIP(file_macro_proto_rawDescData)
	})
	return file_macro_proto_rawDescData
}

var file_macro_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_macro_proto_goTypes = []any{
	(*MacroDto)(nil),            // 0: v1.MacroDto
	(*ListMacrosRequest)(nil),   // 1: v1.ListMacrosRequest
	(*ListMacrosResponse)(nil),  // 2: v1.ListMacrosResponse
	(*CreateMacroRequest)(nil),  // 3: v1.CreateMacroRequest
	(*CreateMacroResponse)(nil), // 4: v1.CreateMacroResponse
	(*DeleteMacroRequest)(nil),  // 5: v1.DeleteMacroRequest
	(*DeleteMacroResponse)(nil), // 6: v1.DeleteMacroResponse
	(*ApplyMacroRequest)(nil),   // 7: v1.ApplyMacroRequest
	(*ApplyMacroResponse)(nil),  // 8: v1.ApplyMacroResponse
}
var file_macro_proto_depIdxs = []int32{
	0, // 0: v1.ListMacrosResponse.data:type_name -> v1.MacroDto
	1, // 1: v1.Macro.ListMacros:input_type -> v1.ListMacrosRequest
	3, // 2: v1.Macro.CreateMacro:input_type -> v1.CreateMacroRequest
	5, // 3: v1.Macro.DeleteMacro:input_type -> v1.DeleteMacroRequest
	7, // 4: v1.Macro.ApplyMacro:input_type -> v1.ApplyMacroRequest
	2, // 5: v1.Macro.ListMacros:output_type -> v1.ListMacrosResponse
	4, // 6: v1.Macro.CreateMacro:output_type -> v1.CreateMacroResponse
	6, // 7: v1.Macro.DeleteMacro:output_type -> v1.DeleteMacroResponse
	8, // 8: v1.Macro.ApplyMacro:output_type -> v1.ApplyMacroResponse
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_macro_proto_init() }
func file_macro_proto_init() {
	if File_macro_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_macro_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*MacroDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_macro_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ListMacrosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_macro_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ListMacrosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_macro_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CreateMacroRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_macro_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CreateMacroResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_macro_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteMacroRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_macro_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteMacroResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_macro_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ApplyMacroRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_macro_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ApplyMacroResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_macro_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_macro_proto_goTypes,
		DependencyIndexes: file_macro_proto_depIdxs,
		MessageInfos:      file_macro_proto_msgTypes,
	}.Build()
	File_macro_proto = out.File
	file_macro_proto_rawDesc = nil
	file_macro_proto_goTypes = nil
	file_macro_proto_depIdxs = nil
}
